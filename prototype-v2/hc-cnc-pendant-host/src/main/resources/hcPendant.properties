# buttons 6-31 get unique gcode for each button
button.6.gcode=G28
button.7.gcode=G30
button.8.gcode=G90 G0 X0 Y0
button.9.gcode=G53 G0 Z0
button.10.gcode=M5; G17; G20; G91 G38.2 z-.5 F2; G0 z.03; G38.2 z-.1 F1; G10 L20 P0 z.062; G0 z.1; G90
#button.10.gcode=G28; G30
button.11.gcode=
button.12.gcode=
button.13.gcode=
button.14.gcode=
button.15.gcode=
button.16.gcode=
button.17.gcode=
button.18.gcode=
button.19.gcode=
button.20.gcode=
button.21.gcode=
button.22.gcode=
button.23.gcode=
button.24.gcode=
button.25.gcode=
button.26.gcode=
button.27.gcode=
button.28.gcode=
button.29.gcode=
button.30.gcode=
button.31.gcode=


# G20 G91 G0 X-0.010
jog.gcode.pattern=G[JOG_UNIT] G91 G0 [JOG_AXIS][JOG_DIR][JOG_SIZE]

# buttons 0-5 are reserved for the six +/- XYZ buttons
button.0.axis=X
button.0.dir=-
button.1.axis=X
button.1.dir=

button.2.axis=Y
button.2.dir=-
button.3.axis=Y
button.3.dir=

button.4.axis=Z
button.4.dir=-
button.5.axis=Z
button.5.dir=



# translates to the G-Code for distance to move in the G0 statement
data.jogSize.0=1.000
data.jogSize.1=0.100
data.jogSize.2=0.010
data.jogSize.3=0.001

# translates to the G-Code for inches (20) or mm (21) in the G0 statement
data.jogUnit.0=20
data.jogUnit.1=21


# gcode.sender selects what gcode sending program to interface with.
# if blank, then the system property "gcode.sender" will be used
# there must be these associated properties that match the chosen gcode sender:
# ex: gcode.sender=xyz
#   xyz.gcode.url
#   xyz.gcode.paramName
#   xyz.gcode.outputResponse
#   xyz.gcode.separator
#   xyz.index.url
#   xyz.index.visit.seconds
#   xyz.index.outputResponse


# can be overridden by system property "gcode.sender", if absent will default to "ugs"
gcode.sender=bcnc

# use this char to separate gcode commands on a single line. if a sender specifies something
# different than this default, then any instance of this default will be replaced by the
# specified separator for the sender. long winded way of saying UGS uses a semicolon and
# bCNC uses \n.
gcode.separator.default=;

######## UGS

# program will add the "?gCode=[GCODE]" part onto the URL at runtime
ugs.gcode.url=http://localhost:8080/sendGcode
ugs.gcode.paramName=gCode
ugs.gcode.separator=;
ugs.gcode.outputResponse=true

# automatically visit the index page every N seconds (0 means never)
ugs.index.visit.seconds=300
ugs.index.url=http://localhost:8080/getSystemState
ugs.index.outputResponse=false

######## bCNC

bcnc.gcode.url=http://localhost:8080/send
bcnc.gcode.paramName=gcode
bcnc.gcode.separator=\n
bcnc.gcode.outputResponse=true

# automatically visit the index page every N seconds (0 means never)
bcnc.index.visit.seconds=0
bcnc.index.url=http://localhost:8080/getSystemState
bcnc.index.outputResponse=false





# specify 0 for wait(), or >0 for wait(N)
# zero would mean this never detects disco (i.e. zero is bad)
serial.thread.wait.millis=10000

# hex encoded byte (i.e. 0x00)
# 0xC0 would translate to using size 0.001 which wont be impl in production so SHOULD be safe :-)
serial.protocol.byte.stop=0xC0

controller.socket.port=8109
controller.socket.host=localhost

controller.protocol.msg.stop=STOP

# specify 0 for wait(), or >0 for wait(N)
controller.thread.wait.millis=0

verbose.heartbeat=false


